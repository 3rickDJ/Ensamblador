;name "mycode"  output file name (max 8 chars for DOS compatibility)
.MODEL SMALL


ORG 100h ;Directiva para definir dónde inicia el código máquina
.DATA
msg DB 100 DUP('$') ;definir un arreglo de bytes de longitud 100 con el carácter '$'

.CODE ;INCIO EL CODIGO DEL PROGRAMA
INICIO:
MOV AX,@DATA  ;DIRECCIONA EL
MOV DS, AX    ;SEGMENTO DE DATO
LEA SI, MSG   ;CARGAR DIRECCIÓN DE MSG A SI

ANOTHER:
MOV AH,1
INT 21H
CMP AL,0DH    ; SE COMPARA CON UN "ENTER" EN ASCII
JE FINAL      ;SALTA HASTA END

;CONVERTIR DE MAYUSCULA A MINUSCULA

CMP AL, 5AH	  ;SALTA SI ES MAS GRANDE QUE 'Z'
JG MINUSCULA  ;Y CONVIERTE DE MINÚSCULA A MAYÚSCULA A
ADD AL,20H    ;CONVERTIR DE MAYUSCULA A MINUSCULA
CMP AL,61H    ;SALTA SI ES IGUAL O
JE NEXT       ;SALTA SI ES CERO
CMP AL, 61H
JG COMPARAR2

MINUSCULA:
SUB AL,20H
CMP AL,41H
JE NEXT
CMP AL, 41H
JG COMPARAR
JMP NEXT

NEXT:
MOV [SI], AL   ;MOV 1ST DIGIT TO msg[0]
INC SI

JMP ANOTHER    ;SALTO INCONDICIONAL

COMPARAR:
CMP AL, 5AH
JE NEXT
CMP AL, 5AH    ;SALTA SI ES MENOR QUE O
JL NEXT        ;SALTA SI NO ES MAYOR O IGUAL

COMPARAR2:
CMP AL, 7AH
JE NEXT
CMP AL, 7AH
JL NEXT

FINAL:
; IMPRIMIR CADENA
MOV AL,'$'   ;AGREGAMOS EL INDICADOR DEL FINAL DE UNA CADENA
MOV [SI],AL  ;FIN DE LA CADENA
LEA DX, MSG
MOV AH, 9H
INT 21H
MOV AX,4C00H ;FIN DEL PROGRAMA
INT 21H
INT 20H

.STACK

END INICIO
